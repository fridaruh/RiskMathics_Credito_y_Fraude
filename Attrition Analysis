{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMbP7n8eqEQzvLWiSjFb5BJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/fridaruh/RiskMathics_Credito_y_Fraude/blob/master/Attrition%20Analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Modelo para predecir \"Attrition\""
      ],
      "metadata": {
        "id": "Z-C1u3L_hSd4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Carga de liber√≠as"
      ],
      "metadata": {
        "id": "2kg1bQZ1K1-p"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.model_selection import train_test_split, cross_val_score, KFold\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from xgboost import XGBClassifier\n",
        "from sklearn.metrics import classification_report, confusion_matrix"
      ],
      "metadata": {
        "id": "gmjFwn-_LG7b"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Cargar datos\n",
        "df = pd.read_csv(\"BankChurners.csv\")"
      ],
      "metadata": {
        "id": "Jvic0NPaNCZ9"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "KcgubhIu4T17",
        "outputId": "94bc40e7-6ff9-435c-d2c6-66defb7cb27f"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Customer_Age  Dependent_count  Months_on_book  \\\n",
              "count  10127.000000     10127.000000    10127.000000   \n",
              "mean      46.325960         2.346203       35.928409   \n",
              "std        8.016814         1.298908        7.986416   \n",
              "min       26.000000         0.000000       13.000000   \n",
              "25%       41.000000         1.000000       31.000000   \n",
              "50%       46.000000         2.000000       36.000000   \n",
              "75%       52.000000         3.000000       40.000000   \n",
              "max       73.000000         5.000000       56.000000   \n",
              "\n",
              "       Total_Relationship_Count  Months_Inactive_12_mon  \\\n",
              "count              10127.000000            10127.000000   \n",
              "mean                   3.812580                2.341167   \n",
              "std                    1.554408                1.010622   \n",
              "min                    1.000000                0.000000   \n",
              "25%                    3.000000                2.000000   \n",
              "50%                    4.000000                2.000000   \n",
              "75%                    5.000000                3.000000   \n",
              "max                    6.000000                6.000000   \n",
              "\n",
              "       Contacts_Count_12_mon  Credit_Limit  Total_Revolving_Bal  \\\n",
              "count           10127.000000  10127.000000         10127.000000   \n",
              "mean                2.455317   8631.953698          1162.814061   \n",
              "std                 1.106225   9088.776650           814.987335   \n",
              "min                 0.000000   1438.300000             0.000000   \n",
              "25%                 2.000000   2555.000000           359.000000   \n",
              "50%                 2.000000   4549.000000          1276.000000   \n",
              "75%                 3.000000  11067.500000          1784.000000   \n",
              "max                 6.000000  34516.000000          2517.000000   \n",
              "\n",
              "       Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n",
              "count     10127.000000          10127.000000     10127.000000    10127.000000   \n",
              "mean       7469.139637              0.759941      4404.086304       64.858695   \n",
              "std        9090.685324              0.219207      3397.129254       23.472570   \n",
              "min           3.000000              0.000000       510.000000       10.000000   \n",
              "25%        1324.500000              0.631000      2155.500000       45.000000   \n",
              "50%        3474.000000              0.736000      3899.000000       67.000000   \n",
              "75%        9859.000000              0.859000      4741.000000       81.000000   \n",
              "max       34516.000000              3.397000     18484.000000      139.000000   \n",
              "\n",
              "       Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \n",
              "count         10127.000000           10127.000000  \n",
              "mean              0.712222               0.274894  \n",
              "std               0.238086               0.275691  \n",
              "min               0.000000               0.000000  \n",
              "25%               0.582000               0.023000  \n",
              "50%               0.702000               0.176000  \n",
              "75%               0.818000               0.503000  \n",
              "max               3.714000               0.999000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-deb79e43-bcf9-4e56-895c-bcd84e917413\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer_Age</th>\n",
              "      <th>Dependent_count</th>\n",
              "      <th>Months_on_book</th>\n",
              "      <th>Total_Relationship_Count</th>\n",
              "      <th>Months_Inactive_12_mon</th>\n",
              "      <th>Contacts_Count_12_mon</th>\n",
              "      <th>Credit_Limit</th>\n",
              "      <th>Total_Revolving_Bal</th>\n",
              "      <th>Avg_Open_To_Buy</th>\n",
              "      <th>Total_Amt_Chng_Q4_Q1</th>\n",
              "      <th>Total_Trans_Amt</th>\n",
              "      <th>Total_Trans_Ct</th>\n",
              "      <th>Total_Ct_Chng_Q4_Q1</th>\n",
              "      <th>Avg_Utilization_Ratio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "      <td>10127.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>46.325960</td>\n",
              "      <td>2.346203</td>\n",
              "      <td>35.928409</td>\n",
              "      <td>3.812580</td>\n",
              "      <td>2.341167</td>\n",
              "      <td>2.455317</td>\n",
              "      <td>8631.953698</td>\n",
              "      <td>1162.814061</td>\n",
              "      <td>7469.139637</td>\n",
              "      <td>0.759941</td>\n",
              "      <td>4404.086304</td>\n",
              "      <td>64.858695</td>\n",
              "      <td>0.712222</td>\n",
              "      <td>0.274894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>8.016814</td>\n",
              "      <td>1.298908</td>\n",
              "      <td>7.986416</td>\n",
              "      <td>1.554408</td>\n",
              "      <td>1.010622</td>\n",
              "      <td>1.106225</td>\n",
              "      <td>9088.776650</td>\n",
              "      <td>814.987335</td>\n",
              "      <td>9090.685324</td>\n",
              "      <td>0.219207</td>\n",
              "      <td>3397.129254</td>\n",
              "      <td>23.472570</td>\n",
              "      <td>0.238086</td>\n",
              "      <td>0.275691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>26.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1438.300000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>510.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>41.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2555.000000</td>\n",
              "      <td>359.000000</td>\n",
              "      <td>1324.500000</td>\n",
              "      <td>0.631000</td>\n",
              "      <td>2155.500000</td>\n",
              "      <td>45.000000</td>\n",
              "      <td>0.582000</td>\n",
              "      <td>0.023000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>46.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>4549.000000</td>\n",
              "      <td>1276.000000</td>\n",
              "      <td>3474.000000</td>\n",
              "      <td>0.736000</td>\n",
              "      <td>3899.000000</td>\n",
              "      <td>67.000000</td>\n",
              "      <td>0.702000</td>\n",
              "      <td>0.176000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>52.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>40.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>11067.500000</td>\n",
              "      <td>1784.000000</td>\n",
              "      <td>9859.000000</td>\n",
              "      <td>0.859000</td>\n",
              "      <td>4741.000000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>0.818000</td>\n",
              "      <td>0.503000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>73.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>56.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>34516.000000</td>\n",
              "      <td>2517.000000</td>\n",
              "      <td>34516.000000</td>\n",
              "      <td>3.397000</td>\n",
              "      <td>18484.000000</td>\n",
              "      <td>139.000000</td>\n",
              "      <td>3.714000</td>\n",
              "      <td>0.999000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-deb79e43-bcf9-4e56-895c-bcd84e917413')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-deb79e43-bcf9-4e56-895c-bcd84e917413 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-deb79e43-bcf9-4e56-895c-bcd84e917413');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fde7f6c4-aeda-4276-9e18-19a624e5e8c2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fde7f6c4-aeda-4276-9e18-19a624e5e8c2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fde7f6c4-aeda-4276-9e18-19a624e5e8c2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3565.7198708729024,\n        \"min\": 8.016814032549084,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          46.32596030413745,\n          46.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependent_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.695807022644,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.3462032191172115,\n          2.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_on_book\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3569.3599832978616,\n        \"min\": 7.986416330871776,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          35.928409203120374,\n          36.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Relationship_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.204849565556,\n        \"min\": 1.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8125802310654686,\n          4.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_Inactive_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.609721574483,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10127.0,\n          2.3411671768539546,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contacts_Count_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3579.5991227316104,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          10127.0,\n          2.4553174681544387,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10439.274058388912,\n        \"min\": 1438.3,\n        \"max\": 34516.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8631.953698034955,\n          4549.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Revolving_Bal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3276.8377072771536,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1162.8140614199665,\n          1276.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Open_To_Buy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10849.334071476527,\n        \"min\": 3.0,\n        \"max\": 34516.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7469.139636614989,\n          3474.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Amt_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.101879688154,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7599406536980349,\n          0.736,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Amt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5770.786816057116,\n        \"min\": 510.0,\n        \"max\": 18484.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4404.086303939963,\n          3899.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Ct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3558.916913530285,\n        \"min\": 10.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          64.85869457884863,\n          67.0,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Ct_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.0936222607697,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7122223758269972,\n          0.702,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Utilization_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3580.321478482974,\n        \"min\": 0.0,\n        \"max\": 10127.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2748935518909845,\n          0.176,\n          10127.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Eliminar columnas irrelevantes\n",
        "df.drop(columns=[\"CLIENTNUM\", \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1\",\n",
        "                  \"Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2\"], inplace=True)\n"
      ],
      "metadata": {
        "id": "jvuDhAM0OQ_B"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Revisi√≥n de valores √∫nicos en la columna\n",
        "df[\"Attrition_Flag\"].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n6GNrXDl4ko9",
        "outputId": "747b9f9b-c72b-4c89-832b-28f672cbdc33"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Existing Customer', 'Attrited Customer'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Attrition_Flag\"].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f2rgN0Hy5A-z",
        "outputId": "af419392-b4ff-4c52-e274-13bf48855422"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Muestra los primeros 5 valores del dataset\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "Mqc78YoX5Xxk",
        "outputId": "28fd4e4b-6b14-43c6-e80c-5c416450bdcf"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Attrition_Flag  Customer_Age Gender  Dependent_count Education_Level  \\\n",
              "0  Existing Customer            45      M                3     High School   \n",
              "1  Existing Customer            49      F                5        Graduate   \n",
              "2  Existing Customer            51      M                3        Graduate   \n",
              "3  Existing Customer            40      F                4     High School   \n",
              "4  Existing Customer            40      M                3      Uneducated   \n",
              "\n",
              "  Marital_Status Income_Category Card_Category  Months_on_book  \\\n",
              "0        Married     $60K - $80K          Blue              39   \n",
              "1         Single  Less than $40K          Blue              44   \n",
              "2        Married    $80K - $120K          Blue              36   \n",
              "3        Unknown  Less than $40K          Blue              34   \n",
              "4        Married     $60K - $80K          Blue              21   \n",
              "\n",
              "   Total_Relationship_Count  Months_Inactive_12_mon  Contacts_Count_12_mon  \\\n",
              "0                         5                       1                      3   \n",
              "1                         6                       1                      2   \n",
              "2                         4                       1                      0   \n",
              "3                         3                       4                      1   \n",
              "4                         5                       1                      0   \n",
              "\n",
              "   Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  \\\n",
              "0       12691.0                  777          11914.0                 1.335   \n",
              "1        8256.0                  864           7392.0                 1.541   \n",
              "2        3418.0                    0           3418.0                 2.594   \n",
              "3        3313.0                 2517            796.0                 1.405   \n",
              "4        4716.0                    0           4716.0                 2.175   \n",
              "\n",
              "   Total_Trans_Amt  Total_Trans_Ct  Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \n",
              "0             1144              42                1.625                  0.061  \n",
              "1             1291              33                3.714                  0.105  \n",
              "2             1887              20                2.333                  0.000  \n",
              "3             1171              20                2.333                  0.760  \n",
              "4              816              28                2.500                  0.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3005db51-d7cf-4b67-8d99-555089b20617\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Attrition_Flag</th>\n",
              "      <th>Customer_Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Dependent_count</th>\n",
              "      <th>Education_Level</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Income_Category</th>\n",
              "      <th>Card_Category</th>\n",
              "      <th>Months_on_book</th>\n",
              "      <th>Total_Relationship_Count</th>\n",
              "      <th>Months_Inactive_12_mon</th>\n",
              "      <th>Contacts_Count_12_mon</th>\n",
              "      <th>Credit_Limit</th>\n",
              "      <th>Total_Revolving_Bal</th>\n",
              "      <th>Avg_Open_To_Buy</th>\n",
              "      <th>Total_Amt_Chng_Q4_Q1</th>\n",
              "      <th>Total_Trans_Amt</th>\n",
              "      <th>Total_Trans_Ct</th>\n",
              "      <th>Total_Ct_Chng_Q4_Q1</th>\n",
              "      <th>Avg_Utilization_Ratio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>45</td>\n",
              "      <td>M</td>\n",
              "      <td>3</td>\n",
              "      <td>High School</td>\n",
              "      <td>Married</td>\n",
              "      <td>$60K - $80K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>39</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>12691.0</td>\n",
              "      <td>777</td>\n",
              "      <td>11914.0</td>\n",
              "      <td>1.335</td>\n",
              "      <td>1144</td>\n",
              "      <td>42</td>\n",
              "      <td>1.625</td>\n",
              "      <td>0.061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>49</td>\n",
              "      <td>F</td>\n",
              "      <td>5</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Single</td>\n",
              "      <td>Less than $40K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>44</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>8256.0</td>\n",
              "      <td>864</td>\n",
              "      <td>7392.0</td>\n",
              "      <td>1.541</td>\n",
              "      <td>1291</td>\n",
              "      <td>33</td>\n",
              "      <td>3.714</td>\n",
              "      <td>0.105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>51</td>\n",
              "      <td>M</td>\n",
              "      <td>3</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Married</td>\n",
              "      <td>$80K - $120K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>36</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3418.0</td>\n",
              "      <td>0</td>\n",
              "      <td>3418.0</td>\n",
              "      <td>2.594</td>\n",
              "      <td>1887</td>\n",
              "      <td>20</td>\n",
              "      <td>2.333</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>40</td>\n",
              "      <td>F</td>\n",
              "      <td>4</td>\n",
              "      <td>High School</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Less than $40K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3313.0</td>\n",
              "      <td>2517</td>\n",
              "      <td>796.0</td>\n",
              "      <td>1.405</td>\n",
              "      <td>1171</td>\n",
              "      <td>20</td>\n",
              "      <td>2.333</td>\n",
              "      <td>0.760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>40</td>\n",
              "      <td>M</td>\n",
              "      <td>3</td>\n",
              "      <td>Uneducated</td>\n",
              "      <td>Married</td>\n",
              "      <td>$60K - $80K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>21</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4716.0</td>\n",
              "      <td>0</td>\n",
              "      <td>4716.0</td>\n",
              "      <td>2.175</td>\n",
              "      <td>816</td>\n",
              "      <td>28</td>\n",
              "      <td>2.500</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3005db51-d7cf-4b67-8d99-555089b20617')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3005db51-d7cf-4b67-8d99-555089b20617 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3005db51-d7cf-4b67-8d99-555089b20617');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6e3ee660-bdb0-4f1c-9a18-510aaf28923a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6e3ee660-bdb0-4f1c-9a18-510aaf28923a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6e3ee660-bdb0-4f1c-9a18-510aaf28923a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 10127,\n  \"fields\": [\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Attrited Customer\",\n          \"Existing Customer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 26,\n        \"max\": 73,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          26,\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependent_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"High School\",\n          \"Graduate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Single\",\n          \"Divorced\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"$60K - $80K\",\n          \"Less than $40K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Card_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Gold\",\n          \"Platinum\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_on_book\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 13,\n        \"max\": 56,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          51,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Relationship_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_Inactive_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contacts_Count_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9088.776650223113,\n        \"min\": 1438.3,\n        \"max\": 34516.0,\n        \"num_unique_values\": 6205,\n        \"samples\": [\n          4517.0,\n          16692.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Revolving_Bal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 814,\n        \"min\": 0,\n        \"max\": 2517,\n        \"num_unique_values\": 1974,\n        \"samples\": [\n          287,\n          502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Open_To_Buy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9090.685323679128,\n        \"min\": 3.0,\n        \"max\": 34516.0,\n        \"num_unique_values\": 6813,\n        \"samples\": [\n          658.0,\n          6245.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Amt_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21920676923070248,\n        \"min\": 0.0,\n        \"max\": 3.397,\n        \"num_unique_values\": 1158,\n        \"samples\": [\n          0.391,\n          0.742\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Amt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3397,\n        \"min\": 510,\n        \"max\": 18484,\n        \"num_unique_values\": 5033,\n        \"samples\": [\n          1829,\n          3441\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Ct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 10,\n        \"max\": 139,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          80,\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Ct_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23808609133294173,\n        \"min\": 0.0,\n        \"max\": 3.714,\n        \"num_unique_values\": 830,\n        \"samples\": [\n          0.596,\n          0.893\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Utilization_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2756914692523933,\n        \"min\": 0.0,\n        \"max\": 0.999,\n        \"num_unique_values\": 964,\n        \"samples\": [\n          0.661,\n          0.505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Genera una muestra aleatoria del dataset de tama√±o 5\n",
        "df.sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "9iBDhBu35hea",
        "outputId": "e506319f-c233-498e-ad63-daa067f950dc"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Attrition_Flag  Customer_Age Gender  Dependent_count Education_Level  \\\n",
              "176   Existing Customer            53      M                3      Uneducated   \n",
              "633   Existing Customer            51      F                2     High School   \n",
              "5429  Existing Customer            41      F                3       Doctorate   \n",
              "4558  Existing Customer            48      F                4         Unknown   \n",
              "1548  Existing Customer            40      M                5         Unknown   \n",
              "\n",
              "     Marital_Status Income_Category Card_Category  Months_on_book  \\\n",
              "176         Married    $80K - $120K          Blue              42   \n",
              "633         Married  Less than $40K        Silver              36   \n",
              "5429         Single  Less than $40K          Blue              31   \n",
              "4558        Unknown  Less than $40K          Blue              29   \n",
              "1548        Unknown    $80K - $120K          Blue              22   \n",
              "\n",
              "      Total_Relationship_Count  Months_Inactive_12_mon  Contacts_Count_12_mon  \\\n",
              "176                          2                       1                      2   \n",
              "633                          5                       3                      0   \n",
              "5429                         4                       2                      1   \n",
              "4558                         6                       3                      4   \n",
              "1548                         6                       1                      4   \n",
              "\n",
              "      Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  \\\n",
              "176        26792.0                 1836          24956.0   \n",
              "633        11261.0                 2485           8776.0   \n",
              "5429        1738.0                    0           1738.0   \n",
              "4558        3212.0                 2517            695.0   \n",
              "1548        4042.0                 1744           2298.0   \n",
              "\n",
              "      Total_Amt_Chng_Q4_Q1  Total_Trans_Amt  Total_Trans_Ct  \\\n",
              "176                  1.432             2398              47   \n",
              "633                  0.736             1158              26   \n",
              "5429                 0.654             4220              68   \n",
              "4558                 0.785             4284              69   \n",
              "1548                 0.582             1471              37   \n",
              "\n",
              "      Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \n",
              "176                 0.880                  0.069  \n",
              "633                 0.857                  0.221  \n",
              "5429                0.889                  0.000  \n",
              "4558                1.300                  0.784  \n",
              "1548                0.542                  0.431  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f7d7f27f-e9e3-49a6-b839-a7d8a7afe931\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Attrition_Flag</th>\n",
              "      <th>Customer_Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Dependent_count</th>\n",
              "      <th>Education_Level</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Income_Category</th>\n",
              "      <th>Card_Category</th>\n",
              "      <th>Months_on_book</th>\n",
              "      <th>Total_Relationship_Count</th>\n",
              "      <th>Months_Inactive_12_mon</th>\n",
              "      <th>Contacts_Count_12_mon</th>\n",
              "      <th>Credit_Limit</th>\n",
              "      <th>Total_Revolving_Bal</th>\n",
              "      <th>Avg_Open_To_Buy</th>\n",
              "      <th>Total_Amt_Chng_Q4_Q1</th>\n",
              "      <th>Total_Trans_Amt</th>\n",
              "      <th>Total_Trans_Ct</th>\n",
              "      <th>Total_Ct_Chng_Q4_Q1</th>\n",
              "      <th>Avg_Utilization_Ratio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>53</td>\n",
              "      <td>M</td>\n",
              "      <td>3</td>\n",
              "      <td>Uneducated</td>\n",
              "      <td>Married</td>\n",
              "      <td>$80K - $120K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>26792.0</td>\n",
              "      <td>1836</td>\n",
              "      <td>24956.0</td>\n",
              "      <td>1.432</td>\n",
              "      <td>2398</td>\n",
              "      <td>47</td>\n",
              "      <td>0.880</td>\n",
              "      <td>0.069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>633</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>51</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>High School</td>\n",
              "      <td>Married</td>\n",
              "      <td>Less than $40K</td>\n",
              "      <td>Silver</td>\n",
              "      <td>36</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>11261.0</td>\n",
              "      <td>2485</td>\n",
              "      <td>8776.0</td>\n",
              "      <td>0.736</td>\n",
              "      <td>1158</td>\n",
              "      <td>26</td>\n",
              "      <td>0.857</td>\n",
              "      <td>0.221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5429</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>41</td>\n",
              "      <td>F</td>\n",
              "      <td>3</td>\n",
              "      <td>Doctorate</td>\n",
              "      <td>Single</td>\n",
              "      <td>Less than $40K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>31</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1738.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1738.0</td>\n",
              "      <td>0.654</td>\n",
              "      <td>4220</td>\n",
              "      <td>68</td>\n",
              "      <td>0.889</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4558</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>48</td>\n",
              "      <td>F</td>\n",
              "      <td>4</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Less than $40K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>29</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3212.0</td>\n",
              "      <td>2517</td>\n",
              "      <td>695.0</td>\n",
              "      <td>0.785</td>\n",
              "      <td>4284</td>\n",
              "      <td>69</td>\n",
              "      <td>1.300</td>\n",
              "      <td>0.784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1548</th>\n",
              "      <td>Existing Customer</td>\n",
              "      <td>40</td>\n",
              "      <td>M</td>\n",
              "      <td>5</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>$80K - $120K</td>\n",
              "      <td>Blue</td>\n",
              "      <td>22</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4042.0</td>\n",
              "      <td>1744</td>\n",
              "      <td>2298.0</td>\n",
              "      <td>0.582</td>\n",
              "      <td>1471</td>\n",
              "      <td>37</td>\n",
              "      <td>0.542</td>\n",
              "      <td>0.431</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d7f27f-e9e3-49a6-b839-a7d8a7afe931')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f7d7f27f-e9e3-49a6-b839-a7d8a7afe931 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f7d7f27f-e9e3-49a6-b839-a7d8a7afe931');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0e2012d6-f503-462a-9bea-64f641edbf2d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0e2012d6-f503-462a-9bea-64f641edbf2d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0e2012d6-f503-462a-9bea-64f641edbf2d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Existing Customer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 40,\n        \"max\": 53,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependent_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Level\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"High School\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Less than $40K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Card_Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Silver\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_on_book\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 22,\n        \"max\": 42,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Relationship_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 6,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_Inactive_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contacts_Count_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10388.098141623423,\n        \"min\": 1738.0,\n        \"max\": 26792.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          11261.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Revolving_Bal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1023,\n        \"min\": 0,\n        \"max\": 2517,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2485\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Open_To_Buy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10157.806249382787,\n        \"min\": 695.0,\n        \"max\": 24956.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8776.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Amt_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34111610926486596,\n        \"min\": 0.582,\n        \"max\": 1.432,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.736\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Amt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1483,\n        \"min\": 1158,\n        \"max\": 4284,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1158\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Ct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 26,\n        \"max\": 69,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Ct_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2694110242733211,\n        \"min\": 0.542,\n        \"max\": 1.3,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.857\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Utilization_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.316628331012877,\n        \"min\": 0.0,\n        \"max\": 0.784,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.221\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Convertir la variable objetivo a num√©rica\n",
        "df[\"Attrition_Flag\"] = df[\"Attrition_Flag\"].apply(lambda x: 0 if x == \"Existing Customer\" else 1)"
      ],
      "metadata": {
        "id": "yB7EXFLqPzbh"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N7Df5Ra15XMh",
        "outputId": "ac973152-9977-4e1e-e9b4-5d63f51f509c"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10127 entries, 0 to 10126\n",
            "Data columns (total 20 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   Attrition_Flag            10127 non-null  object \n",
            " 1   Customer_Age              10127 non-null  int64  \n",
            " 2   Gender                    10127 non-null  object \n",
            " 3   Dependent_count           10127 non-null  int64  \n",
            " 4   Education_Level           10127 non-null  object \n",
            " 5   Marital_Status            10127 non-null  object \n",
            " 6   Income_Category           10127 non-null  object \n",
            " 7   Card_Category             10127 non-null  object \n",
            " 8   Months_on_book            10127 non-null  int64  \n",
            " 9   Total_Relationship_Count  10127 non-null  int64  \n",
            " 10  Months_Inactive_12_mon    10127 non-null  int64  \n",
            " 11  Contacts_Count_12_mon     10127 non-null  int64  \n",
            " 12  Credit_Limit              10127 non-null  float64\n",
            " 13  Total_Revolving_Bal       10127 non-null  int64  \n",
            " 14  Avg_Open_To_Buy           10127 non-null  float64\n",
            " 15  Total_Amt_Chng_Q4_Q1      10127 non-null  float64\n",
            " 16  Total_Trans_Amt           10127 non-null  int64  \n",
            " 17  Total_Trans_Ct            10127 non-null  int64  \n",
            " 18  Total_Ct_Chng_Q4_Q1       10127 non-null  float64\n",
            " 19  Avg_Utilization_Ratio     10127 non-null  float64\n",
            "dtypes: float64(5), int64(9), object(6)\n",
            "memory usage: 1.5+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Distribuci√≥n de la variable objetivo\n",
        "sns.countplot(x=df[\"Attrition_Flag\"], palette=\"viridis\")\n",
        "plt.title(\"Distribuci√≥n de clientes cancelados vs. activos\")\n",
        "plt.xlabel(\"Cancelaci√≥n (0 = Activo, 1 = Cancelado)\")\n",
        "plt.ylabel(\"Cantidad de clientes\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "id": "fYzHeoCx9DXj",
        "outputId": "2d649be6-9222-41c5-a381-df8a0b54a65a"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-10-3cd0e35f2e81>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(x=df[\"Attrition_Flag\"], palette=\"viridis\")\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Comparaci√≥n de transacciones vs cancelaci√≥n\n",
        "sns.boxplot(x=df[\"Attrition_Flag\"], y=df[\"Total_Trans_Ct\"], palette=\"muted\")\n",
        "plt.title(\"Transacciones Totales por Grupo\")\n",
        "plt.xlabel(\"Cancelaci√≥n (0 = Activo, 1 = Cancelado)\")\n",
        "plt.ylabel(\"Total de Transacciones\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "id": "l8jDwyJ8_zQN",
        "outputId": "759fe535-db06-40b6-f944-e59057fc407e"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-11-af1bf5206361>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(x=df[\"Attrition_Flag\"], y=df[\"Total_Trans_Ct\"], palette=\"muted\")\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Education_Level'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fhrXllaW__1v",
        "outputId": "14104dbd-df12-46fc-e03a-c7729d012431"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['High School', 'Graduate', 'Uneducated', 'Unknown', 'College',\n",
              "       'Post-Graduate', 'Doctorate'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Utilizamos LabelEncoder() que convierte valores categ√≥ricos a valores num√©ricos\n",
        "label_encoders = {}\n",
        "categorical_cols = [\"Gender\", \"Education_Level\", \"Marital_Status\", \"Income_Category\", \"Card_Category\"]\n",
        "for col in categorical_cols:\n",
        "    le = LabelEncoder()\n",
        "    df[col] = le.fit_transform(df[col])\n",
        "    label_encoders[col] = le"
      ],
      "metadata": {
        "id": "8kn8_15bASH8"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Nota:**\n",
        "\n",
        " El uso de LabelEncoder puede introducir un problema importante: crea una relaci√≥n ordinal que podr√≠a no existir entre las categor√≠as.\n",
        "\n",
        "Cuando usas LabelEncoder, como en el c√≥digo que compartiste, est√°s asignando valores num√©ricos (0, 1, 2, etc.) a categor√≠as que probablemente son nominales. Esto puede llevar al modelo a interpretar err√≥neamente que existe una jerarqu√≠a o orden entre ellas.\n",
        "Por ejemplo, si \"Education_Level\" se codifica como:\n",
        "\n",
        "\"Primaria\" ‚Üí 0\n",
        "\n",
        "\"Secundaria\" ‚Üí 1\n",
        "\n",
        "\"Universidad\" ‚Üí 2\n",
        "\n",
        "El modelo podr√≠a interpretar que \"Universidad\" (2) vale el doble que \"Secundaria\" (1) o que existe alguna progresi√≥n matem√°tica, cuando en realidad son simplemente categor√≠as diferentes.\n",
        "\n",
        "La alternativa que mencionas, convertir las variables a dummies (tambi√©n llamado one-hot encoding), es generalmente m√°s apropiada para variables categ√≥ricas nominales:\n",
        "\n",
        "\n",
        "\n",
        "```\n",
        "# Usando pandas para crear dummies\n",
        "df_encoded = pd.get_dummies(df, columns=categorical_cols, drop_first=True)\n",
        "\n",
        "# O usando OneHotEncoder de scikit-learn\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "encoder = OneHotEncoder(drop='first', sparse=False)\n",
        "encoded_data = encoder.fit_transform(df[categorical_cols])\n",
        "\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "hdD4xsoKj6gH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "ElpH9PApAsz5",
        "outputId": "34299cca-e5f6-4032-c7a2-ef058a9a8266"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Attrition_Flag  Customer_Age  Gender  Dependent_count  Education_Level  \\\n",
              "0               0            45       1                3                3   \n",
              "1               0            49       0                5                2   \n",
              "2               0            51       1                3                2   \n",
              "3               0            40       0                4                3   \n",
              "4               0            40       1                3                5   \n",
              "\n",
              "   Marital_Status  Income_Category  Card_Category  Months_on_book  \\\n",
              "0               1                2              0              39   \n",
              "1               2                4              0              44   \n",
              "2               1                3              0              36   \n",
              "3               3                4              0              34   \n",
              "4               1                2              0              21   \n",
              "\n",
              "   Total_Relationship_Count  Months_Inactive_12_mon  Contacts_Count_12_mon  \\\n",
              "0                         5                       1                      3   \n",
              "1                         6                       1                      2   \n",
              "2                         4                       1                      0   \n",
              "3                         3                       4                      1   \n",
              "4                         5                       1                      0   \n",
              "\n",
              "   Credit_Limit  Total_Revolving_Bal  Avg_Open_To_Buy  Total_Amt_Chng_Q4_Q1  \\\n",
              "0       12691.0                  777          11914.0                 1.335   \n",
              "1        8256.0                  864           7392.0                 1.541   \n",
              "2        3418.0                    0           3418.0                 2.594   \n",
              "3        3313.0                 2517            796.0                 1.405   \n",
              "4        4716.0                    0           4716.0                 2.175   \n",
              "\n",
              "   Total_Trans_Amt  Total_Trans_Ct  Total_Ct_Chng_Q4_Q1  Avg_Utilization_Ratio  \n",
              "0             1144              42                1.625                  0.061  \n",
              "1             1291              33                3.714                  0.105  \n",
              "2             1887              20                2.333                  0.000  \n",
              "3             1171              20                2.333                  0.760  \n",
              "4              816              28                2.500                  0.000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7dbf4562-6f92-4c51-8d5b-3f6c660b3bcc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Attrition_Flag</th>\n",
              "      <th>Customer_Age</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Dependent_count</th>\n",
              "      <th>Education_Level</th>\n",
              "      <th>Marital_Status</th>\n",
              "      <th>Income_Category</th>\n",
              "      <th>Card_Category</th>\n",
              "      <th>Months_on_book</th>\n",
              "      <th>Total_Relationship_Count</th>\n",
              "      <th>Months_Inactive_12_mon</th>\n",
              "      <th>Contacts_Count_12_mon</th>\n",
              "      <th>Credit_Limit</th>\n",
              "      <th>Total_Revolving_Bal</th>\n",
              "      <th>Avg_Open_To_Buy</th>\n",
              "      <th>Total_Amt_Chng_Q4_Q1</th>\n",
              "      <th>Total_Trans_Amt</th>\n",
              "      <th>Total_Trans_Ct</th>\n",
              "      <th>Total_Ct_Chng_Q4_Q1</th>\n",
              "      <th>Avg_Utilization_Ratio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>12691.0</td>\n",
              "      <td>777</td>\n",
              "      <td>11914.0</td>\n",
              "      <td>1.335</td>\n",
              "      <td>1144</td>\n",
              "      <td>42</td>\n",
              "      <td>1.625</td>\n",
              "      <td>0.061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>8256.0</td>\n",
              "      <td>864</td>\n",
              "      <td>7392.0</td>\n",
              "      <td>1.541</td>\n",
              "      <td>1291</td>\n",
              "      <td>33</td>\n",
              "      <td>3.714</td>\n",
              "      <td>0.105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>36</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3418.0</td>\n",
              "      <td>0</td>\n",
              "      <td>3418.0</td>\n",
              "      <td>2.594</td>\n",
              "      <td>1887</td>\n",
              "      <td>20</td>\n",
              "      <td>2.333</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3313.0</td>\n",
              "      <td>2517</td>\n",
              "      <td>796.0</td>\n",
              "      <td>1.405</td>\n",
              "      <td>1171</td>\n",
              "      <td>20</td>\n",
              "      <td>2.333</td>\n",
              "      <td>0.760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4716.0</td>\n",
              "      <td>0</td>\n",
              "      <td>4716.0</td>\n",
              "      <td>2.175</td>\n",
              "      <td>816</td>\n",
              "      <td>28</td>\n",
              "      <td>2.500</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dbf4562-6f92-4c51-8d5b-3f6c660b3bcc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7dbf4562-6f92-4c51-8d5b-3f6c660b3bcc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7dbf4562-6f92-4c51-8d5b-3f6c660b3bcc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7c830dbc-af67-4319-b8a2-7781b400f502\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c830dbc-af67-4319-b8a2-7781b400f502')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7c830dbc-af67-4319-b8a2-7781b400f502 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 10127,\n  \"fields\": [\n    {\n      \"column\": \"Attrition_Flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer_Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 26,\n        \"max\": 73,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          26,\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dependent_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Education_Level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital_Status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income_Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Card_Category\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_on_book\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 13,\n        \"max\": 56,\n        \"num_unique_values\": 44,\n        \"samples\": [\n          51,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Relationship_Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months_Inactive_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contacts_Count_12_mon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Credit_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9088.776650223113,\n        \"min\": 1438.3,\n        \"max\": 34516.0,\n        \"num_unique_values\": 6205,\n        \"samples\": [\n          4517.0,\n          16692.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Revolving_Bal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 814,\n        \"min\": 0,\n        \"max\": 2517,\n        \"num_unique_values\": 1974,\n        \"samples\": [\n          287,\n          502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Open_To_Buy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9090.685323679128,\n        \"min\": 3.0,\n        \"max\": 34516.0,\n        \"num_unique_values\": 6813,\n        \"samples\": [\n          658.0,\n          6245.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Amt_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21920676923070248,\n        \"min\": 0.0,\n        \"max\": 3.397,\n        \"num_unique_values\": 1158,\n        \"samples\": [\n          0.391,\n          0.742\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Amt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3397,\n        \"min\": 510,\n        \"max\": 18484,\n        \"num_unique_values\": 5033,\n        \"samples\": [\n          1829,\n          3441\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Trans_Ct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 10,\n        \"max\": 139,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          80,\n          38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Ct_Chng_Q4_Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23808609133294173,\n        \"min\": 0.0,\n        \"max\": 3.714,\n        \"num_unique_values\": 830,\n        \"samples\": [\n          0.596,\n          0.893\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Utilization_Ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2756914692523933,\n        \"min\": 0.0,\n        \"max\": 0.999,\n        \"num_unique_values\": 964,\n        \"samples\": [\n          0.661,\n          0.505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Dividir datos en entrenamiento y prueba\n",
        "X = df.drop(columns=[\"Attrition_Flag\"])\n",
        "y = df[\"Attrition_Flag\"]"
      ],
      "metadata": {
        "id": "9_R7lf9nAvHF"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=99, stratify=y)"
      ],
      "metadata": {
        "id": "t79NBtSIDmv0"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape, X_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0YSaA_BWEAQt",
        "outputId": "e2d0cda3-21fa-40a2-b647-0fb3a951984f"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((8101, 19), (2026, 19))"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# √Årbol de decisi√≥n"
      ],
      "metadata": {
        "id": "1CkhAfWoV2Xx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Un √°rbol de decisi√≥n es un modelo de aprendizaje supervisado que funciona mediante la **segmentaci√≥n secuencial de datos a trav√©s de decisiones binarias** (s√≠/no) basadas en las caracter√≠sticas, creando una estructura similar a un √°rbol con nodos, ramas y hojas.\n",
        "\n",
        "Este modelo toma decisiones siguiendo un camino desde el nodo ra√≠z hasta una hoja final, donde **cada nodo interno representa una prueba sobre una caracter√≠stica**, cada rama representa el resultado de esa prueba, y cada hoja representa una clase o valor de predicci√≥n.\n",
        "\n",
        "Los √°rboles de decisi√≥n son f√°ciles de interpretar visualmente, pueden manejar tanto datos num√©ricos como categ√≥ricos, y no requieren normalizaci√≥n de datos, aunque pueden ser propensos al sobreajuste si no se limita su profundidad adecuadamente."
      ],
      "metadata": {
        "id": "wLdtOxaUnZN-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Entrenar modelo de √Årbol de Decisi√≥n\n",
        "dt_model = DecisionTreeClassifier(max_depth=5, random_state=99)\n",
        "dt_model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "bTlzH-vXEC0D",
        "outputId": "6391b717-30df-41c6-9468-56ae7701e384"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeClassifier(max_depth=5, random_state=99)"
            ],
            "text/html": [
              "<style>#sk-container-id-3 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-3 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-3 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-3 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"‚ñ∏\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"‚ñæ\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-3 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-3 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-3 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-3 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=5, random_state=99)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(max_depth=5, random_state=99)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_dt = dt_model.predict(X_test)"
      ],
      "metadata": {
        "id": "DaDIw2KrIpyZ"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_dt"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WFSB21vCPB4g",
        "outputId": "daa06555-ae07-4b7d-a862-14eebff93d09"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, ..., 0, 1, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred_dt))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2F03zksVRZX2",
        "outputId": "0add3279-2d0c-4efd-b132-4520bc2b7e2e"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.96      0.95      0.96      1701\n",
            "           1       0.77      0.82      0.79       325\n",
            "\n",
            "    accuracy                           0.93      2026\n",
            "   macro avg       0.87      0.89      0.88      2026\n",
            "weighted avg       0.93      0.93      0.93      2026\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Hiperparametrizaci√≥n"
      ],
      "metadata": {
        "id": "w6lJwXqFSgmW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Hiperparametrizaci√≥n con validaci√≥n cruzada k-folds\n",
        "max_depth_values = range(1, 21)  # Evaluar valores de max_depth de 1 a 10\n",
        "kf = KFold(n_splits=5, shuffle=True, random_state=42)\n",
        "avg_accuracies = []"
      ],
      "metadata": {
        "id": "0DQ3IyuDR4xn"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for max_depth in max_depth_values:\n",
        "    dt_model = DecisionTreeClassifier(max_depth=max_depth, random_state=42)\n",
        "    scores = cross_val_score(dt_model, X_train, y_train, cv=kf, scoring='accuracy')\n",
        "    avg_accuracies.append(scores.mean())"
      ],
      "metadata": {
        "id": "VLuSVCDNTwzg"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "avg_accuracies"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YiydWTx8UTHI",
        "outputId": "66e4d77e-aeac-42d3-e101-ad1355729b3e"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.8392805843062885,\n",
              " 0.8907556682736614,\n",
              " 0.9174179937700397,\n",
              " 0.9243314216951889,\n",
              " 0.9330961683460142,\n",
              " 0.9388977997121118,\n",
              " 0.9369215771395496,\n",
              " 0.9428471222610643,\n",
              " 0.9423528381352769,\n",
              " 0.9380322312853672,\n",
              " 0.9375381756422266,\n",
              " 0.9363040647062855,\n",
              " 0.9380323836071318,\n",
              " 0.9351928774342924,\n",
              " 0.9354397910145391,\n",
              " 0.9355634762873093,\n",
              " 0.935687009238315,\n",
              " 0.9355635524481916,\n",
              " 0.9353166388679446,\n",
              " 0.9344524413370804]"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Gr√°fica de la precisi√≥n en funci√≥n de max_depth\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(max_depth_values, avg_accuracies, marker='o', linestyle='dashed', color='b')\n",
        "plt.xlabel('Max Depth')\n",
        "plt.ylabel('Precisi√≥n Promedio')\n",
        "plt.title('Precisi√≥n promedio con validaci√≥n cruzada (5-Fold)')\n",
        "plt.xticks(max_depth_values)\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "_pN0VedxUW0F",
        "outputId": "1948466b-7e7b-437b-ac59-6b578a5b9cdc"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Seleccionar el mejor max_depth\n",
        "best_max_depth = max_depth_values[np.argmax(avg_accuracies)]\n",
        "print(f\"Mejor max_depth: {best_max_depth} con precisi√≥n promedio de {max(avg_accuracies):.4f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6lr9f3QqUs6i",
        "outputId": "6866dc15-79c7-4fb6-9f7a-869098829f33"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mejor max_depth: 8 con precisi√≥n promedio de 0.9428\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# XGBoost"
      ],
      "metadata": {
        "id": "fHj96-zzV7Tl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "XGBoost utiliza el principio de boosting que efectivamente \"optimiza hacia los errores\". El proceso funciona de la siguiente manera:\n",
        "\n",
        "1. XGBoost construye √°rboles de decisi√≥n secuencialmente (uno tras otro).\n",
        "\n",
        "2. Cada nuevo √°rbol se entrena poniendo especial √©nfasis en los errores cometidos por los √°rboles anteriores.\n",
        "\n",
        "3. Espec√≠ficamente, despu√©s de construir cada √°rbol, XGBoost repondera las observaciones: los ejemplos mal clasificados o con mayor error de predicci√≥n reciben un mayor peso para el siguiente √°rbol.\n",
        "\n",
        "4. Esto significa que cada nuevo √°rbol se especializa en corregir los errores de la combinaci√≥n de √°rboles anteriores.\n",
        "\n",
        "5. El objetivo es que cada √°rbol sucesivo se enfoque en las partes m√°s dif√≠ciles del problema, precisamente donde los √°rboles anteriores ten√≠an dificultades.\n",
        "\n",
        "Esta caracter√≠stica de \"aprender de los errores\" es una de las razones por las que XGBoost suele conseguir excelentes resultados, ya que cada componente del ensamblaje se centra espec√≠ficamente en mejorar las debilidades del modelo hasta ese momento."
      ],
      "metadata": {
        "id": "AxBPC62pnA1h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "xgb_model = XGBClassifier(use_label_encoder=False, eval_metric='logloss', random_state=42)\n",
        "xgb_model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 149
        },
        "id": "1dZX1VwTVNfU",
        "outputId": "85e75f71-6fbf-4524-d61c-da3336241b38"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/xgboost/core.py:158: UserWarning: [03:44:56] WARNING: /workspace/src/learner.cc:740: \n",
            "Parameters: { \"use_label_encoder\" } are not used.\n",
            "\n",
            "  warnings.warn(smsg, UserWarning)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric='logloss',\n",
              "              feature_types=None, gamma=None, grow_policy=None,\n",
              "              importance_type=None, interaction_constraints=None,\n",
              "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
              "              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n",
              "              max_leaves=None, min_child_weight=None, missing=nan,\n",
              "              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
              "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-2 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-2 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-2 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"‚ñ∏\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"‚ñæ\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-2 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-2 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-2 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-2 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
              "              feature_types=None, gamma=None, grow_policy=None,\n",
              "              importance_type=None, interaction_constraints=None,\n",
              "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
              "              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n",
              "              max_leaves=None, min_child_weight=None, missing=nan,\n",
              "              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
              "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>XGBClassifier</div></div><div><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
              "              colsample_bylevel=None, colsample_bynode=None,\n",
              "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
              "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
              "              feature_types=None, gamma=None, grow_policy=None,\n",
              "              importance_type=None, interaction_constraints=None,\n",
              "              learning_rate=None, max_bin=None, max_cat_threshold=None,\n",
              "              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n",
              "              max_leaves=None, min_child_weight=None, missing=nan,\n",
              "              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n",
              "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_xgb = xgb_model.predict(X_test)"
      ],
      "metadata": {
        "id": "iarSJ7g0W4m-"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred_xgb))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JaheAmfbXBP7",
        "outputId": "badabf0e-8c16-4b11-c2f2-cef07026989e"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.98      0.99      0.99      1701\n",
            "           1       0.94      0.91      0.92       325\n",
            "\n",
            "    accuracy                           0.98      2026\n",
            "   macro avg       0.96      0.95      0.95      2026\n",
            "weighted avg       0.98      0.98      0.98      2026\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### M√©tricas por clase:\n",
        "- **Clase 0** (\"Existing Customer\"):\n",
        "  - Precision: 0.98 - Cuando el modelo predice un cliente como clase 0, acierta el 98% de las veces.\n",
        "  - Recall: 0.99 - El modelo identifica correctamente el 99% de todos los clientes reales de clase 0.\n",
        "  - F1-score: 0.99 - Una media arm√≥nica muy alta entre precision y recall.\n",
        "  - Support: 1701 - Hay 1,701 clientes de clase 0 en el conjunto de prueba.\n",
        "\n",
        "- **Clase 1** (\"Attrited Customer\"):\n",
        "  - Precision: 0.94 - Cuando el modelo predice un cliente como clase 1, acierta el 94% de las veces.\n",
        "  - Recall: 0.91 - El modelo identifica correctamente el 91% de todos los clientes reales de clase 1.\n",
        "  - F1-score: 0.92 - Una media arm√≥nica buena entre precision y recall.\n",
        "  - Support: 325 - Hay 325 clientes de clase 1 en el conjunto de prueba.\n",
        "\n",
        "### M√©tricas globales:\n",
        "- **Accuracy**: 0.98 - El 98% de todas las predicciones son correctas.\n",
        "- **Macro avg**: Promedio simple de las m√©tricas entre todas las clases.\n",
        "  - Precision: 0.96, Recall: 0.95, F1-score: 0.95\n",
        "- **Weighted avg**: Promedio ponderado por el n√∫mero de instancias en cada clase.\n",
        "  - Precision: 0.98, Recall: 0.98, F1-score: 0.98\n",
        "\n",
        "### Interpretaci√≥n general:\n",
        "1. El modelo tiene un rendimiento excelente, con una precisi√≥n global del 98%.\n",
        "2. El desempe√±o es ligeramente mejor para la clase 0 que para la clase 1.\n",
        "3. Hay un desbalance en las clases (1701 vs 325), lo que hace que la m√©trica weighted avg sea m√°s representativa del rendimiento global.\n",
        "4. La diferencia entre macro avg y weighted avg refleja este desbalance.\n",
        "\n",
        "El modelo parece estar funcionando muy bien, especialmente considerando que est√° manejando datos desbalanceados (hay aproximadamente 5 veces m√°s instancias de clase 0 que de clase 1)."
      ],
      "metadata": {
        "id": "o-pk6b_qmNhf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualizar importancia de las caracter√≠sticas\n",
        "feature_importances = pd.Series(xgb_model.feature_importances_, index=X.columns)\n",
        "feature_importances.nlargest(10).plot(kind='barh', title='Importancia de caracter√≠sticas (XGBoost)')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "93ZIdMvhXE-E",
        "outputId": "d2b2a885-a980-40ee-d808-abfd8d7b2efa"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Interpretaci√≥n de Importancia de Caracter√≠sticas en XGBoost\n",
        "\n",
        "Este gr√°fico muestra la importancia relativa de diferentes caracter√≠sticas en un modelo XGBoost, probablemente para predecir si un cliente es un cliente existente o pertenece a otra categor√≠a (posiblemente clientes que han abandonado el servicio).\n",
        "\n",
        "## An√°lisis de Caracter√≠sticas por Orden de Importancia\n",
        "\n",
        "1. **Total_Trans_Ct (‚âà0.24)**:\n",
        "   - El n√∫mero total de transacciones es la caracter√≠stica m√°s influyente del modelo con diferencia.\n",
        "   - Esto sugiere que el volumen de actividad transaccional es el indicador m√°s fuerte para predecir el comportamiento del cliente.\n",
        "\n",
        "2. **Total_Revolving_Bal (‚âà0.17)**:\n",
        "   - El saldo rotativo total ocupa el segundo lugar en importancia.\n",
        "   - Indica que la forma en que los clientes manejan su cr√©dito rotativo es altamente predictiva.\n",
        "\n",
        "3. **Total_Relationship_Count (‚âà0.14)**:\n",
        "   - El n√∫mero de productos que el cliente tiene con el banco.\n",
        "   - Sugiere que los clientes con m√°s productos tienen comportamientos distintivos.\n",
        "\n",
        "4. **Total_Trans_Amt (‚âà0.07)**:\n",
        "   - El monto total de las transacciones tiene una importancia moderada.\n",
        "   - Interesante notar que la cantidad de transacciones (Total_Trans_Ct) es mucho m√°s importante que el monto total.\n",
        "\n",
        "5. **Total_Ct_Chng_Q4_Q1 (‚âà0.05)**:\n",
        "   - Representa el cambio en el n√∫mero de transacciones del primer al cuarto trimestre.\n",
        "   - La tendencia en el comportamiento transaccional a lo largo del tiempo es moderadamente importante.\n",
        "\n",
        "6. **Meses_Inactive_12_mon (‚âà0.045)**:\n",
        "   - N√∫mero de meses que el cliente ha estado inactivo en los √∫ltimos 12 meses.\n",
        "   - La inactividad reciente parece ser un indicador relevante pero no dominante.\n",
        "\n",
        "7. **Total_Amt_Chng_Q4_Q1 (‚âà0.04)**:\n",
        "   - Cambio en el monto de las transacciones del primer al cuarto trimestre.\n",
        "   - Similar al cambio en cantidad de transacciones, pero ligeramente menos importante.\n",
        "\n",
        "8. **Customer_Age (‚âà0.035)**:\n",
        "   - La edad del cliente tiene una importancia relativamente baja, lo que sugiere que el comportamiento es m√°s predictivo que las caracter√≠sticas demogr√°ficas.\n",
        "\n",
        "9. **Avg_Open_To_Buy (‚âà0.035)**:\n",
        "   - Promedio de l√≠nea de cr√©dito disponible para compras.\n",
        "   - Importancia similar a la edad del cliente.\n",
        "\n",
        "10. **Contacts_Count_12_mon (‚âà0.03)**:\n",
        "    - N√∫mero de contactos con el banco en los √∫ltimos 12 meses.\n",
        "    - La caracter√≠stica menos importante entre las top 10, pero a√∫n as√≠ conserva cierto valor predictivo.\n",
        "\n",
        "## Conclusiones Generales\n",
        "\n",
        "- **Comportamiento transaccional**: Las caracter√≠sticas relacionadas con transacciones (cantidad y saldo rotativo) son, por mucho, los predictores m√°s importantes.\n",
        "- **Relaci√≥n bancaria**: La profundidad de la relaci√≥n con el banco (n√∫mero de productos) es significativamente importante.\n",
        "- **Cambios temporales**: Los cambios en el comportamiento del cliente a lo largo del tiempo tienen una importancia moderada.\n",
        "- **Datos demogr√°ficos**: La edad tiene una importancia relativamente baja comparada con las variables de comportamiento.\n",
        "- **Concentraci√≥n de importancia**: Las tres caracter√≠sticas principales acumulan m√°s del 50% de la importancia total, lo que indica una fuerte jerarqu√≠a en el poder predictivo.\n",
        "\n",
        "Esta distribuci√≥n de importancia sugiere que el modelo podr√≠a simplificarse centr√°ndose en las caracter√≠sticas m√°s importantes si fuera necesario reducir la complejidad sin perder demasiado poder predictivo."
      ],
      "metadata": {
        "id": "RJ9uQNABmD36"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import plot_tree\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "# Visualizar el √°rbol de decisi√≥n\n",
        "plt.figure(figsize=(20, 10))\n",
        "plot_tree(dt_model,\n",
        "          feature_names=X.columns,  # Nombres de las caracter√≠sticas\n",
        "          class_names=['Existing Customer', 'Attrited Customer'], # Nombres de las clases\n",
        "          filled=True, rounded=True,\n",
        "          fontsize=8)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        },
        "id": "cKlgj5oUXxJY",
        "outputId": "d81ba197-ee06-4909-c86e-f7ac8e04fd66"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1000 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABoMAAAMWCAYAAAA6a/9IAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzs3XV0VNfexvHvSNwTYjgECB4kBHd3S+pyWyqXCqXUXWhpqdFSarS91Gk7wWlxd3cPboFA3DPy/kE7bd6gQQLh+azVtTJn73P270xZSSbP2XsbHA6HAxERERERERERERERESmVjCVdgIiIiIiIiIiIiIiIiFw9CoNERERERERERERERERKMYVBIiIiIiIiIiIiIiIipZjCIBERERERERERERERkVJMYZCIiIiIiIiIiIiIiEgppjBIRERERERERERERESkFFMYJCIiIiIiIiIiIiIiUoopDBIRERERERERERERESnFFAaJiIiIiIiIiIiIiIiUYgqDRERERERERERERERESjGFQSIiIiIiIiIiIiIiIqWYwiAREREREREREREREZFSTGGQiIiIiIiIiIiIiIhIKaYwSEREREREREREREREpBRTGCQiIiIiIiIiIiIiIlKKKQwSEREREREREREREREpxRQGiYiIiIiIiIiIiIiIlGIKg0REREREREREREREREoxhUEiIiIiIiIiIiIiIiKlmMIgERERERERERERERGRUkxhkIiIiIiIiIiIiIiISCmmMEhERERERERERERERKQUUxgkIiIiIiIiIiIiIiJSiikMEhERERERERERERERKcUUBomIiIiIiIiIiIiIiJRiCoNERERERERERERERERKMYVBIiIiIiIiIiIiIiIipZjCIBERERERERERERERkVJMYZCIiIiIiIiIiIiIiEgppjBIRERERERERERERESkFFMYJCIiIiIiIiIiIiIiUoopDBIRERERERERERERESnFFAaJiIiIiIiIiIiIiIiUYgqDRERERERERERERERESjGFQSIiIiIiIiIiIiIiIqWYwiAREREREREREREREZFSTGGQiIiIiIiIiIiIiIhIKaYwSEREREREREREREREpBRTGCQiIiIiIiIiIiIiIlKKmUu6ABERERERuXw2m43ly5ezbds2rFZrSZcjpUCZMmXo3LkzQUFBJV2KiIiI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KCI3MYfDwZYtW5zfp3bu3Imfn1+hYMjNza2kyxQRERERcVIYJCIiIiLXhR07djifuN+6dSve3t707t2buLg4unXrhoeHR0mXKCJShMPhYNu2bc7vXzt27MDX15c+ffoQFxdHly5dcHd3L+kyRUREROQmpzBIRERERErMv/+Aun37dnx8fAr9AVUBkIjcaLZv3+78vrZt2zbn97XY2Fi6deumYEhERERESoTCIBERERG5ZhwOB1u3bnUurfT3E/R9+/YlNjZWT9CLSKmyY8cO5/e7LVu2aMajiIiIiJQYhUEiIiIiclX9vbfG30/K79q1S3triMhNZ9euXc7vg3/vhdarVy/i4uK0F5qIiIiIXHUKg0RERETkinM4HGzatAmLxUJ8fDy7d+/G39+ffv36ERcXR8eOHRUAichNa/fu3c4ZQxs3bsTT05NevXoRGxtLjx498PLyKukSRURERKSUURgkIiIiIleEw+Fgw4YNzj9wJiQkEBAQUCgAcnV1LekyRUSuKwkJCc7vm+vXr8fT05MePXoQFxdHjx498Pb2LukSRURERKQUUBgkIiIiUgIaNGgAQH5+Prt27aJevXoAREZG8ttvv5VgZZfG4XCwfv165wygvXv3EhgYSP/+/YmLi6NDhw64uLiUdJkiIjeEvXv3OoOhdevW4eHhQffu3YmLi6NXr17XNBiqXLkybm5uzn2NoqOj+eabb87Zv127dgwdOpR+/fpdowpFRERE5FIoDBIREREpQQcOHKBBgwakpqYWabNarZjN5mtf1AU4HA7Wrl3rDID2799PUFAQAwYMIC4ujnbt2ikAEhG5TPv373cGQ2vWrMHd3Z3u3bsTGxtL79698fHxuarjV65cmcmTJzsfXrgQhUEiIiIi1zdjSRcgIiIiIv+oXLkyzz33HDExMdx7770sXLiw0B/itm7dSuXKlZ2vZ82aRatWrWjcuDExMTEsWLDgqtTlcDhYtWoVzzzzDFWrViUmJoZx48bRuXNn5syZQ2JiImPHjqVz584KgkREroAqVarwzDPPsHr1avbv389bb73FsWPHuPPOOwkODqZfv378/PPPpKenX7OafvnlF5o2bUrDhg2Jiopi2rRpZ+33zTffULt2bRo0aEC9evVYtWoVAHv27KFnz540adKE+vXrM2bMmGtWu4iIiMjN7vp71FRERETkJnf69GlW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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Interpretaci√≥n\n",
        "\n",
        "## Primer nodo del √°rbol de decisi√≥n\n",
        "\n",
        "\n",
        "\n",
        "## √çndice de Gini\n",
        "**Gini = 0.27**: El √≠ndice de Gini es una medida de impureza o heterogeneidad. Un valor bajo como 0.27 indica que este nodo es relativamente \"puro\", lo que significa que las muestras en este nodo tienden a pertenecer mayoritariamente a una clase. El √≠ndice de Gini var√≠a de 0 (nodo completamente puro, todas las muestras pertenecen a la misma clase) a 0.5 (en el caso binario, m√°xima impureza con 50% de cada clase).\n",
        "\n",
        "## N√∫mero de Muestras\n",
        "**Samples = 8101**: Indica que hay 8,101 muestras o registros que caen en este nodo del √°rbol. Es decir, 8,101 clientes cumplen con la condici√≥n \"Total_Trans_Ct <= 54.5\".\n",
        "\n",
        "## Distribuci√≥n de Clases\n",
        "**Value = [6799, 1302]**: Representa la distribuci√≥n de clases en este nodo. En este caso, hay 6,799 muestras de una clase y 1,302 de otra. T√≠picamente, estos n√∫meros corresponden a las dos posibles clases del problema (probablemente \"Existing Customer\" y alguna otra categor√≠a como \"Attrited Customer\").\n",
        "\n",
        "## Clase Mayoritaria\n",
        "**Class = Existing Customer**: Indica la clase mayoritaria en este nodo. Como hay m√°s muestras de \"Existing Customer\" (6,799) que de la otra clase (1,302), el modelo clasificar√≠a a un nuevo cliente que caiga en este nodo como \"Existing Customer\".\n",
        "\n",
        "## Regla de Decisi√≥n\n",
        "La condici√≥n \"Total_Trans_Ct <= 54.5\" en la parte superior indica que este nodo contiene clientes cuyo n√∫mero total de transacciones es menor o igual a 54.5. Esta es la regla de decisi√≥n que el √°rbol ha aprendido para segmentar los datos en este punto.\n",
        "\n",
        "## Resumen\n",
        "En resumen, este nodo nos est√° informando que entre los clientes que realizaron 54.5 o menos transacciones, la gran mayor√≠a (6,799 de 8,101) son clientes existentes, con un nivel de \"pureza\" bastante alto seg√∫n el √≠ndice de Gini."
      ],
      "metadata": {
        "id": "Cor4OKMxlUix"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ywetaykXl1zL"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}